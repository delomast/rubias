% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{gsi_mcmc_1}
\alias{gsi_mcmc_1}
\title{MCMC from the simplest GSI model for pi and the individual posterior probabilities}
\usage{
gsi_mcmc_1(
  SL,
  Pi_init,
  lambda,
  reps,
  burn_in,
  sample_int_Pi,
  sample_int_PofZ,
  save_z = FALSE
)
}
\arguments{
\item{SL}{matrix of the scaled likelihoods.  This is should have values for each individual in a column
(going down in the rows are values for different populations).}

\item{Pi_init}{Starting value for the pi (collection mixture proportion) vector.}

\item{lambda}{the prior to be added to the collection allocations, in order to
generate pseudo-count Dirichlet parameters for the simulation of a new pi vector}

\item{reps}{total number of reps (sweeps) to do.}

\item{burn_in}{how many reps to discard in the beginning when doing the mean calculation. They will still be
returned in the traces if desired}

\item{sample_int_Pi}{the number of reps between samples being taken for Pi traces.  If 0 no trace samples are taken}

\item{sample_int_PofZ}{the number of reps between samples being taken for the traces of posterior of each individual's origin. If 0
no trace samples are taken.}

\item{save_z}{TRUE to return a trace of Z values assigned to individuals in the mixture wiht the same frequency as the trace of Pi}
}
\value{
\code{gsi_mcmc_1} returns a list of three. \code{$mean} lists the posterior
means for collection proportions \code{pi} and for the individual posterior
probabilities of assignment \code{PofZ}. \code{$sd} returns the posterior standard
deviations for the same values.

If the corresponding \code{sample_int} variables are not 0, \code{$trace} contains
samples taken from the Markov chain at intervals of \code{sample_int_}(variable) steps.
}
\description{
Using a matrix of scaled likelihoods, this function samples values of pi and the posteriors
for all the individuals.  It returns the output in a list.
}
\examples{
# this demonstrates it with scaled likelihoods computed from
# assignment of the reference samples

# we have to get the ploidies to pass to tcf2param_list
locnames <- names(alewife)[-(1:16)][c(TRUE, FALSE)]
ploidies <- rep(2, length(locnames))
names(ploidies) <- locnames

params <- tcf2param_list(alewife, 17, ploidies = ploidies)
logl <- geno_logL(params)
SL <- apply(exp(logl), 2, function(x) x/sum(x))
lambda <- rep(1/params$C, params$C)
mcmc <- gsi_mcmc_1(SL, lambda, lambda, 200, 50, 5, 5)
}
\keyword{internal}
